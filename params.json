{"name":"Hadoop","tagline":"Loading CSV Data Into Hive","body":"# Loading CSV Data Into Hive\r\n\r\nMichael Prom \r\n11/16/2013\r\n\r\n### This how to will show you how to load csv data into Hive. \r\n---\r\nFor those who are more familar with SQL based queries. HIVE is built on top of the Hadoop framework to help with querying large amounts of data. HiveQL is very much similar to SQL. By loading data into Hive you can perform queries as you would using SQL but using data that resides in HDFS. \r\n\r\n## Loading Data \r\n  \r\nThe data I have is taken from http://www.infochimps.com/datasets/nyse-daily-1970-2010-open-close-high-low-and-volume.  There is the schema of the file along with one record:\r\n\r\n    exchange,stock_symbol,date,stock_price_open,stock_price_high,stock_price_low,stock_price_close,stock_volume,stock_price_adj_close\r\n    NYSE,EXI,2010-02-08,43.04,43.06,42.45,42.51,53000,42.51\r\n \r\n\r\n## Using the Hive Shell\r\n\r\nThe first step is to get into the Hive Shell. All you need to do is type in \"Hive\"\r\n\r\n    Logging initialized using configuration in jar:file:/opt/cloudera/parcels/CDH-4.4.0-1.cdh4.4.0.p0.39/lib/hive/lib/hive-common-0.10.0-cdh4.4.0.jar!/hive-log4j.properties\r\n    Hive history file=/tmp/prom9473/hive_job_log_53331a21-cac3-423b-9573-211c1883f7e9_2102019621.txt\r\n    hive>\r\n\r\nYou will see the hive prompt. You can now continue with your commands.\r\n\r\n## Create Table\r\n\r\nThe first step in loading data into hive is creating a table which you will load your csv data. In this example I create a table called nyse followed by the column name and type. \r\n\r\n    CREATE TABLE nyse(exchange string,stock_symbol string ,`date` timestamp,stock_price_open double,stock_price_high double,stock_price_low double,stock_price_close double,stock_volume bigint,stock_price_adj_close double) ROW FORMAT DELIMITED FIELDS TERMINATED BY ','\r\n\r\nYou will need to the row format to be delimited by ','.  **Note:** date is a reserved word in Hive. To use a reserved word place ` around the word. For example:\r\n\r\n    `date`  \r\n\r\nNow execute the CREATE TABLE Statement.\r\n\r\n    hive> CREATE TABLE nyse(exchange string,stock_symbol string ,`date` timestamp,stock_price_open double,stock_price_high double,stock_price_low double,stock_price_close double,stock_volume bigint,stock_price_adj_close double) ROW FORMAT DELIMITED FIELDS TERMINATED BY ',';\r\n    OK\r\n    Time taken: 0.347 seconds\r\n\r\nEach line should end with a semicolon to note that it is the end of line. Here I've executed a show tables to show all the tables within my instance of Hive. (I created the nasdaq one earlier). \r\n\r\n\r\n    hive> show tables;\r\n    nasdaq\r\n    nyse\r\n    Time taken: 1.837 seconds\r\n\r\n## Load The Data\r\n\r\nNow that the table is created. You can now load the CSV data into hive. The data is outside of HDFS in my nyse directory.\r\n\r\n     LOAD DATA LOCAL INPATH '/home/user/infochimps_dataset_4777_download_16185-csv/infochimps_dataset_4777_download_16185/NYSE/*.csv' INTO TABLE nyse;\r\n\r\n\r\n## Querying the Data\r\n\r\nNow that the data is loaded. You can run your queries. \r\n\r\n    select distinct stock_symbol from nasdaq where stock_price_close > 50;\r\n\r\n    ZOLT\r\n    ZRAN\r\n    ZUMZ\r\n    Time taken: 20.849 seconds\r\n\r\n\r\n## References\r\n\r\nDataset\r\n\r\nNYSE Daily 1970-2010 Open, Close, High, Low and Volume  Added By Infochimps \r\nhttp://www.infochimps.com/datasets/nyse-daily-1970-2010-open-close-high-low-and-volume","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}